#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>
#include <SFML/System.hpp>
#include <vector>

class Bullet {
public:
    sf::CircleShape shape;
    float speed;

    Bullet(float x, float y) {
        shape.setRadius(5);
        shape.setFillColor(sf::Color::Red);
        shape.setPosition(x, y);
        speed = 10.0f;
    }

    void update() {
        shape.move(0, -speed);
    }
};

class Player {
public:
    sf::RectangleShape shape;

    Player() {
        shape.setSize(sf::Vector2f(50, 50));
        shape.setFillColor(sf::Color::Green);
        shape.setPosition(375, 500);
    }

    void moveLeft() {
        shape.move(-5, 0);
    }

    void moveRight() {
        shape.move(5, 0);
    }
};

int main() {
    sf::RenderWindow window(sf::VideoMode(800, 600), "2D Shooting Game");
    Player player;
    std::vector<Bullet> bullets;

    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Left)) {
            player.moveLeft();
        }
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Right)) {
            player.moveRight();
        }
        if (sf::Keyboard::isKeyPressed(sf::Keyboard::Space)) {
            bullets.emplace_back(player.shape.getPosition().x + 22.5f, player.shape.getPosition().y);
        }

        for (auto& bullet : bullets) {
            bullet.update();
        }

        window.clear();
        window.draw(player.shape);
        for (const auto& bullet : bullets) {
            window.draw(bullet.shape);
        }
        window.display();
    }

    return 0;
}
